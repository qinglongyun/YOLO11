# ================== ASCII框图生成代码 ==================
def draw_ewc_diagram():
    diagram = """
+-----------------------+
|      YOLOv8 Model     |
| (Backbone + Neck + Head) |
+-----------------------+
           │
           ▼
+-----------------------+
|   Base Task Training  |  # 初始任务训练
| (Calculate Fisher Matrix) |  
+-----------------------+
           │
           ▼
+-----------------------+
|   Save Parameters     |  # 保存旧参数θ_old
|   Save Fisher Matrix  |  # 保存Fisher信息F
+-----------------------+
           │
           ▼
+-----------------------+
|   New Task Training   |  # 新任务训练流程
|   ┌───────────────┐   |
|   │  Data Loader  │   |  ← 加载新任务数据
|   └───────────────┘   |
|           │           |
|           ▼           |
|   ┌───────────────┐   |
|   │ Forward Pass  │   |  → 前向传播
|   └───────────────┘   |
|           │           |
|           ▼           |
|   ┌───────────────┐   |
|   │ Loss Compute  │   |  → 检测损失L_new
|   └───────────────┘   |
|           │           |
|           ▼           |
|   ┌───────────────┐   |
|   │ EWC Penalty   │   |  → 正则项L_ewc
|   └───────────────┘   |
|           │           |
|           ▼           |
|   ┌───────────────┐   |
|   │ Total Loss =  │   |  → L_total = L_new + λ*L_ewc
|   │ L_new + λ*L_ewc│   |
|   └───────────────┘   |
|           │           |
|           ▼           |
|   ┌───────────────┐   |
|   │ Backward &    │   |  ← 反向传播与更新
|   │ Optimize      │   |
|   └───────────────┘   |
+-----------------------+
"""
    print(diagram)

# ================== 生成可视化框图 ==================
if __name__ == "__main__":
    draw_ewc_diagram()